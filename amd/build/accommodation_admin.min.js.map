{"version":3,"file":"accommodation_admin.min.js","sources":["../src/accommodation_admin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Admin functionality for accommodations.\n *\n * @module     local_accommodations/accommodation_admin\n * @copyright  2025 Your Name <your.email@example.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/modal_factory', 'core/modal_events', 'core/str', 'core/ajax', 'core/notification'],\n    function($, ModalFactory, ModalEvents, Str, Ajax, Notification) {\n        /**\n         * Initialize the admin functionality.\n         */\n        var init = function() {\n            // Initialize delete confirmation dialogs\n            initDeleteConfirmation();\n\n            // Initialize bulk selection\n            initBulkSelection();\n\n            // Initialize category tree expansion\n            initCategoryTree();\n        };\n\n        /**\n         * Initialize delete confirmation dialogs.\n         */\n        function initDeleteConfirmation() {\n            // Handle delete links\n            $(document).on('click', '.delete-accommodation', function(e) {\n                e.preventDefault();\n\n                var deleteUrl = $(this).attr('href');\n                var typeName = $(this).data('type');\n                var userName = $(this).data('user');\n\n                // Get confirmation strings\n                Str.get_string('confirmdelete', 'local_accommodations', {\n                    type: typeName,\n                    user: userName\n                }).then(function(confirmText) {\n                    return ModalFactory.create({\n                        type: ModalFactory.types.SAVE_CANCEL,\n                        title: Str.get_string('confirm', 'moodle'),\n                        body: confirmText\n                    });\n                }).then(function(modal) {\n                    modal.setSaveButtonText(Str.get_string('delete', 'moodle'));\n\n                    // Handle delete button click\n                    modal.getRoot().on(ModalEvents.save, function() {\n                        window.location.href = deleteUrl;\n                    });\n\n                    modal.show();\n\n                    return modal;\n                }).catch(Notification.exception);\n            });\n        }\n\n        /**\n         * Initialize bulk selection functionality.\n         */\n        function initBulkSelection() {\n            // Handle select all checkbox\n            $('#select-all-accommodations').on('change', function() {\n                var checked = $(this).prop('checked');\n                $('.accommodation-checkbox').prop('checked', checked);\n                updateBulkActionButtons();\n            });\n\n            // Handle individual checkboxes\n            $(document).on('change', '.accommodation-checkbox', function() {\n                updateBulkActionButtons();\n\n                // Update select all checkbox\n                var allChecked = $('.accommodation-checkbox:checked').length === $('.accommodation-checkbox').length;\n                $('#select-all-accommodations').prop('checked', allChecked);\n            });\n\n            // Handle bulk action button clicks\n            $('.bulk-action-button').on('click', function(e) {\n                e.preventDefault();\n\n                var action = $(this).data('action');\n                var selectedIds = getSelectedAccommodationIds();\n\n                if (selectedIds.length === 0) {\n                    Str.get_string('noselecteditems', 'moodle').then(function(message) {\n                        Notification.addNotification({\n                            message: message,\n                            type: 'info'\n                        });\n                        return;\n                    }).catch(Notification.exception);\n                    return;\n                }\n\n                // Perform the bulk action\n                performBulkAction(action, selectedIds);\n            });\n        }\n\n        /**\n         * Get selected accommodation IDs.\n         *\n         * @return {Array} Array of selected accommodation IDs\n         */\n        function getSelectedAccommodationIds() {\n            var selectedIds = [];\n\n            $('.accommodation-checkbox:checked').each(function() {\n                selectedIds.push($(this).val());\n            });\n\n            return selectedIds;\n        }\n\n        /**\n         * Perform bulk action on selected accommodations.\n         *\n         * @param {string} action The action to perform\n         * @param {Array} ids Array of accommodation IDs\n         */\n        function performBulkAction(action, ids) {\n            var promises = Ajax.call([{\n                methodname: 'local_accommodations_bulk_action',\n                args: {\n                    action: action,\n                    ids: ids\n                }\n            }]);\n\n            promises[0].then(function(result) {\n                if (result.success) {\n                    Notification.addNotification({\n                        message: result.message,\n                        type: 'success'\n                    });\n\n                    // Reload page to reflect changes\n                    window.location.reload();\n                } else {\n                    Notification.addNotification({\n                        message: result.message,\n                        type: 'error'\n                    });\n                }\n\n                return;\n            }).catch(Notification.exception);\n        }\n\n        /**\n         * Update bulk action button states.\n         */\n        function updateBulkActionButtons() {\n            var selectedCount = $('.accommodation-checkbox:checked').length;\n\n            if (selectedCount > 0) {\n                $('.bulk-action-button').removeClass('disabled');\n\n                // Update the button text to show count\n                $('.bulk-action-button').each(function() {\n                    var originalText = $(this).data('original-text') || $(this).text();\n\n                    // Store original text if not already stored\n                    if (!$(this).data('original-text')) {\n                        $(this).data('original-text', originalText);\n                    }\n\n                    $(this).text(originalText + ' (' + selectedCount + ')');\n                });\n            } else {\n                $('.bulk-action-button').addClass('disabled');\n\n                // Reset button text\n                $('.bulk-action-button').each(function() {\n                    var originalText = $(this).data('original-text');\n                    if (originalText) {\n                        $(this).text(originalText);\n                    }\n                });\n            }\n        }\n\n        /**\n         * Initialize category tree expansion.\n         */\n        function initCategoryTree() {\n            // Handle category tree expansion\n            $(document).on('click', '.category-tree .has-children > .category-link', function(e) {\n                e.preventDefault();\n\n                var li = $(this).parent();\n                li.toggleClass('expanded');\n\n                var ul = li.find('> ul');\n                if (li.hasClass('expanded')) {\n                    ul.slideDown();\n                } else {\n                    ul.slideUp();\n                }\n            });\n\n            // Initialize batch action for activities\n            $('#batch-apply-button').on('click', function() {\n                var activityType = $('#batch-activity-type').val();\n                var action = $('#batch-action').val();\n\n                // Get all toggle checkboxes matching the filter\n                var toggles = [];\n\n                if (activityType === 'all') {\n                    toggles = $('.activity-toggle');\n                } else {\n                    toggles = $('.activity-toggle[data-type=\"' + activityType + '\"]');\n                }\n\n                // Apply the action to all toggles\n                var checked = (action === 'enable');\n                toggles.prop('checked', checked).trigger('change');\n\n                // Show a notification\n                var messageKey = checked ? 'enabledallaccommodations' : 'disabledallaccommodations';\n                Str.get_string(messageKey, 'local_accommodations').then(function(message) {\n                    Notification.addNotification({\n                        message: message,\n                        type: 'success'\n                    });\n                    return;\n                }).catch(Notification.exception);\n            });\n\n            // Initialize CSV file upload preview\n            $('#accommodations-csv-file').on('change', function() {\n                var file = this.files[0];\n                if (file) {\n                    var reader = new FileReader();\n                    reader.onload = function(e) {\n                        var contents = e.target.result;\n                        var lines = contents.split('\\n');\n\n                        // Show preview of first few lines\n                        var preview = '';\n                        for (var i = 0; i < Math.min(5, lines.length); i++) {\n                            preview += lines[i] + '\\n';\n                        }\n\n                        $('#csv-preview').text(preview);\n                    };\n                    reader.readAsText(file);\n                }\n            });\n        }\n\n        return {\n            init: init\n        };\n    });"],"names":["define","$","ModalFactory","ModalEvents","Str","Ajax","Notification","updateBulkActionButtons","selectedCount","length","removeClass","each","originalText","this","data","text","addClass","init","document","on","e","preventDefault","deleteUrl","attr","typeName","userName","get_string","type","user","then","confirmText","create","types","SAVE_CANCEL","title","body","modal","setSaveButtonText","getRoot","save","window","location","href","show","catch","exception","checked","prop","allChecked","action","selectedIds","push","val","getSelectedAccommodationIds","ids","call","methodname","args","result","success","addNotification","message","reload","performBulkAction","li","parent","toggleClass","ul","find","hasClass","slideDown","slideUp","activityType","trigger","messageKey","file","files","reader","FileReader","onload","lines","target","split","preview","i","Math","min","readAsText"],"mappings":"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"}